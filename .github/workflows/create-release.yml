name: Create Release

concurrency:
  group: ci-${{ github.repository }}-release
  cancel-in-progress: false

on:
  push:
    branches:
      - "main"

env:
  IMAGE_NAME: "${{ github.repository_owner }}/github-actions-runner"

jobs:
  create_release:
    uses: fullstack-devops/actions/.github/workflows/create-release.yml@main
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}

  build_base:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Red Hat Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.RH_QUAY_USERNAME }}
          password: ${{ secrets.RH_QUAY_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build github-actions-runner:base
        uses: docker/build-push-action@v2
        with:
          context: ./images/base
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.IMAGE_NAME }}:latest-base
            ghcr.io/${{ env.IMAGE_NAME }}:${{needs.create_release.outputs.version}}-base
            quay.io/${{ env.IMAGE_NAME }}:latest
            quay.io/${{ env.IMAGE_NAME }}:latest-base
            quay.io/${{ env.IMAGE_NAME }}:${{needs.create_release.outputs.version}}-base

  build_kaniko-sidecar:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Red Hat Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.RH_QUAY_USERNAME }}
          password: ${{ secrets.RH_QUAY_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build github-actions-runner:kaniko-sidecar
        uses: docker/build-push-action@v2
        with:
          context: ./images/kaniko-sidecar
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:latest-kaniko-sidecar
            ghcr.io/${{ env.IMAGE_NAME }}:${{needs.create_release.outputs.version}}-kaniko-sidecar
            quay.io/${{ env.IMAGE_NAME }}:latest-kaniko-sidecar
            quay.io/${{ env.IMAGE_NAME }}:${{needs.create_release.outputs.version}}-kaniko-sidecar

  build_flavors:
    runs-on: ubuntu-latest
    needs: [create_release, build_base]
    strategy:
      matrix:
        flavor: [ansible-k8s, maven-adopt-8-ng, maven-temurin-11, golang, ng-cli-karma, fullstacked]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Red Hat Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.RH_QUAY_USERNAME }}
          password: ${{ secrets.RH_QUAY_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: link child image to current version
        run: |
          sed -i --expression "s@FROM ghcr.io/${{ env.IMAGE_NAME }}.*@FROM ghcr.io/${{ env.IMAGE_NAME }}:${{needs.create_release.outputs.version}}-base@g" \
          images/${{ matrix.flavor }}/Dockerfile

      - name: Build github-actions-runner:${{ matrix.flavor }}
        uses: docker/build-push-action@v2
        with:
          context: ./images/${{ matrix.flavor }}
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:latest-${{ matrix.flavor }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{needs.create_release.outputs.version}}-${{ matrix.flavor }}
            quay.io/${{ env.IMAGE_NAME }}:latest-${{ matrix.flavor }}
            quay.io/${{ env.IMAGE_NAME }}:${{needs.create_release.outputs.version}}-${{ matrix.flavor }}

  publish_release:
    runs-on: ubuntu-latest
    needs: [create_release, build_base, build_flavors]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup awesome-ci
        uses: fullstack-devops/awesome-ci-action@main

      - name: Publish Release
        run: awesome-ci release publish -releaseid "$ACI_RELEASE_ID"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACI_RELEASE_ID: ${{ needs.create_release.outputs.releaseid }}

      - name: update helm charts appVersion
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.HELM_REPO_TOKEN }}
          repository: fullstack-devops/helm-charts
          event-type: update_chart_version
          client-payload: '{"chart": "github-actions-runner", "version": "${{ needs.create_release.outputs.version }}"}'
